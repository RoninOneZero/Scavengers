[gd_scene load_steps=8 format=3 uid="uid://ds241sxg1nj0x"]

[ext_resource type="Texture2D" uid="uid://0r7vcj0c72tt" path="res://UI/KenneyCrosshairs/crosshair001.png" id="1_5d2nc"]

[sub_resource type="GDScript" id="GDScript_dmxq4"]
script/source = "extends CharacterBody3D

@export var mouse_sensitivity: float = 0.5

@onready var camera := $Camera3D

const SPEED = 6.0
const JUMP_VELOCITY = 4.5

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity: float = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready() -> void:
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED

func _process(_delta: float) -> void:
	if Input.is_action_just_pressed(\"quit\"): # Quit game debug
		get_tree().quit()

func _input(event: InputEvent) -> void:
	if event is InputEventMouseMotion: # Camera rotation
		rotation_degrees.y -= mouse_sensitivity * event.relative.x
		camera.rotation_degrees.x -= mouse_sensitivity * event.relative.y
		camera.rotation_degrees.x = clamp(camera.rotation_degrees.x, -90, 90)


#TODO remove jump, add slide
func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"move_left\", \"move_right\", \"move_forward\", \"move_back\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_0upog"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_h3kle"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_t4xjr"]
bg_color = Color(0.737255, 0, 0.113725, 1)
corner_radius_top_left = 4
corner_radius_top_right = 4
corner_radius_bottom_right = 4
corner_radius_bottom_left = 4

[sub_resource type="GDScript" id="GDScript_wy68u"]
script/source = "extends ProgressBar


func change_value(amount) -> void:
	value = amount
"

[sub_resource type="GDScript" id="GDScript_cqof6"]
script/source = "extends Node

@export var max_health: float = 100
var current_health: float: set = _set_health 

signal health_changed(new_health)

func _ready() -> void:
	reset_health()


func reset_health() -> void:
	current_health = max_health

func _set_health(value: float):
	current_health = value
	emit_signal(\"health_changed\", current_health)
"

[node name="Player" type="CharacterBody3D"]
collision_layer = 2
script = SubResource("GDScript_dmxq4")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_0upog")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_h3kle")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.68982, 0)
current = true
fov = 90.0

[node name="HUD" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Crosshair" type="TextureRect" parent="HUD"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -32.0
offset_top = -32.0
offset_right = 32.0
offset_bottom = 32.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("1_5d2nc")

[node name="HealthMeter" type="ProgressBar" parent="HUD"]
layout_mode = 1
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -353.0
offset_top = -49.0
offset_right = 353.0
offset_bottom = -27.0
grow_horizontal = 2
grow_vertical = 0
theme_override_styles/fill = SubResource("StyleBoxFlat_t4xjr")
value = 50.0
script = SubResource("GDScript_wy68u")

[node name="HEALTH" type="Node" parent="."]
script = SubResource("GDScript_cqof6")

[connection signal="health_changed" from="HEALTH" to="HUD/HealthMeter" method="change_value"]
